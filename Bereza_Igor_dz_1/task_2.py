"""
Задание 2.
Реализуйте два алгоритма.
Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.
Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.
Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.
Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
Постарайтесь не использовать ф-ции min() и sort() и другие ф-ции!
Подход должен быть максимально алгоритмическим.
"""


# Первый алгоритм. Сложность: O(n^2)
def min_value_lst_1(lst):
    min_value = lst[0]  # O(1)
    for i in range(len(lst) - 1):  # O(n)
        for j in range(i + 1, len(lst)):  # O(n)
            if lst[i] < lst[j]:  # O(1)
                if lst[i] < min_value:  # O(1)
                    min_value = lst[i]  # O(1)
            else:
                if lst[j] < min_value:  # O(1)
                    min_value = lst[j]  # O(1)
    return min_value  # O(1)


# Второй алгоритм. Сложность: O(n)
def min_value_lst_2(lst):
    min_value = lst[0]  # O(1)
    for i in range(1, len(lst)):  # O(n)
        if lst[i] < min_value:  # O(1)
            min_value = lst[i]  # O(1)
    return min_value  # O(1)


print(min_value_lst_1([-3, 4, -5, 1, 8, 0, 1]))
print(min_value_lst_2([-3, 4, -5, 1, 8, 0, 1]))
